{
	"version": 17,
	"variables": [
		{
			"key": "Product",
			"type": "query",
			"visible": true,
			"input": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n| summarize rawValues = arrayRemoveNulls(arraySort(collectDistinct(event.provider)))\n| fieldsAdd values = if(arraySize(rawValues) > 0, rawValues, else:\"None\")",
			"multiple": true,
			"defaultValue": [
				"3420b2ac-f1cf-4b24-b62d-61ba1ba8ed05*"
			]
		},
		{
			"key": "RiskLevel",
			"type": "query",
			"visible": true,
			"input": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n| dedup dt.security.risk.level\n| fieldsAdd orderHelper = if(dt.security.risk.level == \"CRITICAL\", 1, else: \nif(dt.security.risk.level == \"HIGH\", 2, else: \n  if(dt.security.risk.level == \"MEDIUM\", 3, else: \n    if(dt.security.risk.level == \"LOW\", 4, else: \n      if(dt.security.risk.level == \"NONE\", 5, else: \n        if(dt.security.risk.level == \"NOT_AVAILABLE\", 6)\n)))))\n| sort orderHelper asc\n| summarize rawValues = arrayRemoveNulls(collectDistinct(dt.security.risk.level))\n| fieldsAdd values = if(arraySize(rawValues) > 0, rawValues, else: \"None\")",
			"multiple": true,
			"defaultValue": [
				"3420b2ac-f1cf-4b24-b62d-61ba1ba8ed05*"
			]
		},
		{
			"key": "Vulnerability",
			"type": "query",
			"visible": true,
			"input": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n| summarize rawValues = arrayRemoveNulls(arraySort(collectDistinct(vulnerability.id)))\n| fieldsAdd values = if(arraySize(rawValues) > 0, rawValues, else: \"None\")",
			"multiple": true,
			"defaultValue": [
				"3420b2ac-f1cf-4b24-b62d-61ba1ba8ed05*"
			]
		},
		{
			"key": "Component",
			"type": "query",
			"visible": true,
			"input": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n| summarize rawValues = arrayRemoveNulls(arraySort(collectDistinct(component.name)))\n| fieldsAdd values = if(arraySize(rawValues) > 0, rawValues, else: \"None\")",
			"multiple": true,
			"defaultValue": [
				"3420b2ac-f1cf-4b24-b62d-61ba1ba8ed05*"
			]
		},
		{
			"key": "AffectedObjectType",
			"type": "query",
			"visible": true,
			"input": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n| summarize rawValues = arrayRemoveNulls(arraySort(collectDistinct(object.type)))\n| fieldsAdd values = if(arraySize(rawValues) > 0, rawValues, else: \"None\")",
			"multiple": true,
			"defaultValue": [
				"3420b2ac-f1cf-4b24-b62d-61ba1ba8ed05*"
			]
		}
	],
	"tiles": {
		"0": {
			"type": "data",
			"title": "",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n// aggregation and custom filtering\n| fieldsAdd object.name=coalesce(object.name, object.id)\n| fields timestamp, Time=timestamp, \n          `Source product`=event.provider, `Risk level`=dt.security.risk.level,\n          `Risk score`=dt.security.risk.score, Vulnerability=vulnerability.title,\n          `Object type`=object.type,`Affected object`=object.name, `Vulnerable component`=component.name\n| sort {timestamp, direction:\"descending\"}, {`Risk score`, direction:\"descending\"}\n| fieldsRemove timestamp\n| limit 50",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "table",
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "Risk level",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
								},
								"comparator": "=",
								"label": "",
								"value": "CRITICAL"
							},
							{
								"id": 3,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
								},
								"comparator": "=",
								"label": "",
								"value": "HIGH"
							},
							{
								"id": 4,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"
								},
								"comparator": "=",
								"label": "",
								"value": "MEDIUM"
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "Source product,Risk level,Vulnerability,Object type,Affected object,Vulnerable component",
						"valueAxisLabel": "Risk score",
						"categoryAxis": [
							"Source product",
							"Risk level",
							"Vulnerability",
							"Object type",
							"Affected object",
							"Vulnerable component"
						],
						"valueAxis": [
							"Risk score"
						],
						"tooltipVariant": "single"
					},
					"hiddenLegendFields": [
						"Risk score"
					],
					"fieldMapping": {
						"timestamp": "Time",
						"leftAxisValues": [
							"Risk score"
						]
					},
					"truncationMode": "middle",
					"valueRepresentation": "absolute",
					"xAxisLabel": "Time",
					"xAxisIsLabelVisible": false,
					"leftYAxisSettings": {}
				},
				"singleValue": {
					"showLabel": true,
					"label": "timestamp",
					"prefixIcon": "",
					"recordField": "timestamp",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [
						[
							"Repository"
						]
					],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {
						"value": "Risk score"
					},
					"legend": "auto",
					"displayedFields": [
						"Source product",
						"Risk level",
						"Vulnerability",
						"Object type",
						"Affected object",
						"Vulnerable component"
					],
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "Risk score",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": [
						"Source product",
						"Risk level",
						"Vulnerability",
						"Affected object",
						"Vulnerable component"
					]
				},
				"label": {
					"showLabel": false,
					"label": "Risk score"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"dataMapping": {
					"dimension": "Time",
					"displayedFields": [
						"Time",
						"Source product",
						"Risk level",
						"Vulnerability",
						"Object type",
						"Affected object",
						"Vulnerable component"
					],
					"value": "Risk score",
					"longitude": "Risk score"
				},
				"tooltip": {}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"1": {
			"type": "markdown",
			"title": "",
			"content": "# Vulnerability findings\n\nOverview of the vulnerability findings reported by various products. Learn more about [Security events ingest](https://dt-url.net/1d63p0v)."
		},
		"2": {
			"type": "data",
			"title": "Top 10 vulnerabilities by risk and number of affected objects",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort: {timestamp desc}\n// aggregation and custom filtering\n| summarize {\n    `Risk score`=toDouble(takeMax(dt.security.risk.score)),\n    `Affected objects`=countDistinctExact(object.id),\n    `Vulnerable components`=countDistinctExact(component.name)\n    }, by:{\n    Product=event.provider,\n    Vulnerability=vulnerability.title, \n    `Risk level`=dt.security.risk.level}\n| sort {`Risk score`, direction:\"descending\"}, {`Affected objects`, direction:\"descending\"},{`Vulnerable components`,direction:\"descending\"}\n| fields `Risk level`, Vulnerability, `Affected objects`, `Vulnerable components`, Product\n| limit 10",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "table",
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "Risk score",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
								},
								"comparator": "=",
								"label": "",
								"value": 9
							},
							{
								"id": 3,
								"color": {
									"Default": "var(--dt-colors-charts-security-risk-level-high-default, #cd3741)"
								},
								"comparator": ">",
								"label": "",
								"value": 7
							}
						]
					},
					{
						"id": 2,
						"field": "Risk level",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
								},
								"comparator": "=",
								"label": "",
								"value": "CRITICAL"
							},
							{
								"id": 3,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
								},
								"comparator": "=",
								"label": "",
								"value": "HIGH"
							},
							{
								"id": 4,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"
								},
								"comparator": "=",
								"label": "",
								"value": "MEDIUM"
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "Risk level,Vulnerability,Product",
						"valueAxisLabel": "Affected objects,Vulnerable components",
						"categoryAxis": [
							"Risk level",
							"Vulnerability",
							"Product"
						],
						"valueAxis": [
							"Affected objects",
							"Vulnerable components"
						],
						"tooltipVariant": "single"
					},
					"hiddenLegendFields": [
						"Affected objects",
						"Vulnerable components"
					],
					"truncationMode": "middle",
					"valueRepresentation": "absolute",
					"xAxisLabel": "Last finding",
					"xAxisIsLabelVisible": false,
					"leftYAxisSettings": {}
				},
				"singleValue": {
					"showLabel": true,
					"label": "Vulnerability external id (CVE)",
					"prefixIcon": "",
					"recordField": "Vulnerability external id (CVE)",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [
						[
							"riskScore"
						]
					],
					"lineWrapIds": [],
					"columnWidths": {
						"[\"Vulnerability\"]": 523,
						"[\"Affected objects\"]": 166.875
					},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {
						"value": "Affected objects"
					},
					"legend": "auto",
					"displayedFields": [
						"Risk level",
						"Vulnerability",
						"Product"
					],
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "Affected objects",
							"rangeAxis": ""
						},
						{
							"valueAxis": "Vulnerable components",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": [
						"Risk level",
						"Vulnerability"
					]
				},
				"label": {
					"showLabel": false,
					"label": "Affected objects"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"dataMapping": {
					"dimension": "Risk level",
					"displayedFields": [
						"Risk level",
						"Vulnerability",
						"Affected objects",
						"Vulnerable components",
						"Last finding"
					],
					"value": "Affected objects",
					"longitude": "Affected objects",
					"latitude": "Vulnerable components"
				},
				"tooltip": {}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"5": {
			"type": "data",
			"title": "Critical",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {object.id, vulnerability.id, component.name, component.version}, sort: {timestamp desc}\n// aggregation and custom filtering\n| filter dt.security.risk.level==\"CRITICAL\"\n| summarize {Vulnerabilities=countDistinctExact(vulnerability.id)}",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "singleValue",
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "Vulnerabilities",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
								},
								"comparator": "≥",
								"label": "",
								"value": 1
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "Vulnerabilities",
						"valueAxisLabel": "Vulnerabilities",
						"categoryAxis": [
							"Vulnerabilities"
						],
						"valueAxis": [
							"Vulnerabilities"
						],
						"tooltipVariant": "single"
					},
					"leftYAxisSettings": {
						"max": "auto",
						"scale": "linear"
					},
					"hiddenLegendFields": [],
					"legend": {
						"hidden": true
					},
					"seriesOverrides": [
						{
							"seriesId": [
								"findings"
							],
							"override": {
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
								}
							}
						}
					],
					"truncationMode": "middle"
				},
				"singleValue": {
					"showLabel": false,
					"label": "Vulnerabilities",
					"prefixIcon": "",
					"recordField": "Vulnerabilities",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"isInverseTrend": true,
						"isVisible": false,
						"isRelative": false,
						"trendType": "auto"
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"sortBy": {
						"columnId": "[\"scandate\"]",
						"direction": "descending"
					},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {},
					"legend": "auto",
					"displayedFields": [],
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "Vulnerabilities",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": []
				},
				"label": {
					"showLabel": false,
					"label": "Vulnerabilities"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"unitsOverrides": [
					{
						"identifier": "criticals",
						"unitCategory": "unspecified",
						"baseUnit": "none",
						"displayUnit": null,
						"decimals": 0,
						"suffix": "",
						"delimiter": false,
						"added": 1713193663126
					}
				],
				"dataMapping": {
					"dimension": "Vulnerabilities",
					"displayedFields": [
						"Vulnerabilities"
					],
					"value": "Vulnerabilities",
					"longitude": "Vulnerabilities"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"6": {
			"type": "data",
			"title": "High",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {object.id, vulnerability.id, component.name, component.version}, sort: {timestamp desc}\n// aggregation and custom filtering\n| filter dt.security.risk.level==\"HIGH\"\n| summarize {Vulnerabilities=countDistinctExact(vulnerability.id)}",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "singleValue",
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "Vulnerabilities",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
								},
								"comparator": "≥",
								"label": "",
								"value": 1
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "Vulnerabilities",
						"valueAxisLabel": "Vulnerabilities",
						"categoryAxis": [
							"Vulnerabilities"
						],
						"valueAxis": [
							"Vulnerabilities"
						],
						"tooltipVariant": "single"
					},
					"leftYAxisSettings": {
						"max": "auto"
					},
					"hiddenLegendFields": [],
					"seriesOverrides": [
						{
							"seriesId": [
								"findings"
							],
							"override": {
								"color": {
									"Default": "var(--dt-colors-charts-security-risk-level-high-default, #cd3741)"
								}
							}
						}
					],
					"legend": {
						"hidden": true
					},
					"truncationMode": "middle"
				},
				"singleValue": {
					"showLabel": false,
					"label": "Vulnerabilities",
					"prefixIcon": "",
					"recordField": "Vulnerabilities",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"isInverseTrend": true,
						"isRelative": false,
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {},
					"displayedFields": [],
					"legend": {
						"hidden": false,
						"position": "auto"
					},
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "Vulnerabilities",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": []
				},
				"label": {
					"showLabel": false,
					"label": "Vulnerabilities"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"unitsOverrides": [
					{
						"identifier": "highs",
						"unitCategory": "unspecified",
						"baseUnit": "none",
						"displayUnit": null,
						"decimals": 0,
						"suffix": "",
						"delimiter": false,
						"added": 1713193676655
					}
				],
				"dataMapping": {
					"dimension": "Vulnerabilities",
					"displayedFields": [
						"Vulnerabilities"
					],
					"value": "Vulnerabilities",
					"longitude": "Vulnerabilities"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"7": {
			"type": "data",
			"title": "High & critical findings by object type",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n// aggregation and custom filtering\n| summarize {\n    Critical=countIf(dt.security.risk.level==\"CRITICAL\"),\n    High=countIf(dt.security.risk.level==\"HIGH\")\n  }, by:{`Object type`=object.type}\n| sort Critical desc",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "categoricalBarChart",
			"visualizationSettings": {
				"thresholds": [],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "number-of-slices",
						"groupingThresholdValue": 10,
						"valueType": "absolute"
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "Object type",
						"valueAxisLabel": "Critical,High",
						"categoryAxis": [
							"Object type"
						],
						"valueAxis": [
							"Critical",
							"High"
						],
						"tooltipVariant": "single",
						"isCategoryLabelVisible": true,
						"isValueLabelVisible": true,
						"groupMode": "stacked",
						"colorPaletteMode": "single-color"
					},
					"colorPalette": "security-risk-level",
					"truncationMode": "middle",
					"xAxisLabel": "timestamp",
					"xAxisIsLabelVisible": false,
					"valueRepresentation": "absolute",
					"hiddenLegendFields": [
						"event",
						"host",
						"object",
						"product"
					],
					"leftYAxisSettings": {}
				},
				"singleValue": {
					"showLabel": true,
					"label": "error",
					"prefixIcon": "",
					"recordField": "error",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "hexagon",
					"dataMappings": {
						"value": "Critical"
					},
					"legend": {
						"hidden": false,
						"position": "bottom"
					},
					"displayedFields": [
						"Object type"
					],
					"colorMode": "color-palette",
					"colorPalette": "red",
					"min": null,
					"max": null,
					"truncationMode": "end"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "Critical",
							"rangeAxis": ""
						},
						{
							"valueAxis": "High",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": [
						"Object type"
					]
				},
				"label": {
					"showLabel": false,
					"label": "Critical"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"autoSelectVisualization": false,
				"dataMapping": {
					"dimension": "Object type",
					"displayedFields": [
						"Object type",
						"Critical",
						"High"
					],
					"value": "Critical",
					"longitude": "Critical",
					"latitude": "High"
				},
				"tooltip": {}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"10": {
			"type": "data",
			"title": "Number of vulnerabilities by risk",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {object.id, vulnerability.id, component.name, component.version}, sort: {timestamp desc}\n// aggregation and custom filtering\n| summarize {\n    numberOfVulnerabilities = countDistinctExact(vulnerability.id),\n    riskScore=takeMax(dt.security.risk.score)}, by:{dt.security.risk.level}\n| sort riskScore desc",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "donutChart",
			"visualizationSettings": {
				"thresholds": [],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "absolute",
						"groupingThresholdValue": 5,
						"valueType": "absolute",
						"showTotalValue": true,
						"hideLabels": false
					},
					"categoryOverrides": {
						"NOT_AVAILABLE": {
							"color": "var(--dt-colors-charts-logstatus-none-default, #2c2f3f)",
							"added": 1713354177614
						},
						"NONE": {
							"color": "var(--dt-colors-charts-categorical-color-05-default, #84859a)",
							"added": 1718981822129
						}
					},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "dt.security.risk.level",
						"valueAxisLabel": "numberOfVulnerabilities,riskScore",
						"categoryAxis": [
							"dt.security.risk.level"
						],
						"valueAxis": [
							"numberOfVulnerabilities",
							"riskScore"
						],
						"tooltipVariant": "single"
					},
					"hiddenLegendFields": [],
					"colorPalette": "security-risk-level",
					"truncationMode": "middle"
				},
				"singleValue": {
					"showLabel": true,
					"label": "container_image.registry",
					"prefixIcon": "",
					"recordField": "container_image.registry",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {
						"value": "numberOfVulnerabilities"
					},
					"legend": "auto",
					"displayedFields": [
						"dt.security.risk.level"
					],
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "numberOfVulnerabilities",
							"rangeAxis": ""
						},
						{
							"valueAxis": "riskScore",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": [
						"dt.security.risk.level"
					]
				},
				"label": {
					"showLabel": false,
					"label": "numberOfVulnerabilities"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"dataMapping": {
					"dimension": "dt.security.risk.level",
					"displayedFields": [
						"dt.security.risk.level",
						"numberOfVulnerabilities",
						"riskScore"
					],
					"value": "numberOfVulnerabilities",
					"longitude": "numberOfVulnerabilities",
					"latitude": "riskScore"
				},
				"tooltip": {}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"13": {
			"type": "data",
			"title": "Objects with top risk",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n// aggregation and custom filtering\n| filter in(dt.security.risk.level,{\"CRITICAL\",\"HIGH\"})\n| summarize {components=countDistinctExact(object.id)}",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "singleValue",
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "components",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 0,
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #ae132d)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "absolute",
						"groupingThresholdValue": 0,
						"valueType": "absolute"
					},
					"categoryOverrides": {
						"NOT_AVAILABLE": {
							"color": "var(--dt-colors-charts-logstatus-none-default, #2c2f3f)",
							"added": 1713354177614
						}
					},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "components",
						"valueAxisLabel": "components",
						"categoryAxis": [
							"components"
						],
						"valueAxis": [
							"components"
						],
						"tooltipVariant": "single"
					},
					"hiddenLegendFields": [],
					"colorPalette": "security-risk-level",
					"truncationMode": "middle"
				},
				"singleValue": {
					"showLabel": false,
					"label": "components",
					"prefixIcon": "",
					"recordField": "components",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {},
					"displayedFields": [],
					"legend": {
						"hidden": false,
						"position": "auto"
					},
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "components",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": []
				},
				"label": {
					"showLabel": false,
					"label": "components"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"dataMapping": {
					"dimension": "components",
					"displayedFields": [
						"components"
					],
					"value": "components",
					"longitude": "components"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"16": {
			"type": "markdown",
			"title": "",
			"content": "## Affected objects and components\nDistribution of risk across the various objects that represent affected artifacts and resources."
		},
		"17": {
			"type": "data",
			"title": "Top 10 vulnerable components by finding criticality",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n// aggregation and custom filtering\n| summarize {\n        Critical=countIf(dt.security.risk.level==\"CRITICAL\"),\n        High=countIf(dt.security.risk.level==\"HIGH\"),\n        Medium=countIf(dt.security.risk.level==\"MEDIUM\"),\n        `Affected objects`=countDistinctExact(object.id),\n        `Last finding`=takeMax(timestamp)\n}, by:{Component=component.name}\n| sort {Critical, direction:\"descending\"}, {High, direction:\"descending\"},\n        {Medium, direction:\"descending\"}, {`Affected objects`, direction:\"descending\"}\n| limit 10",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "table",
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "Critical",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					},
					{
						"id": 2,
						"field": "High",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					},
					{
						"id": 3,
						"field": "Medium",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 1,
								"color": "#DC671E",
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "Component",
						"valueAxisLabel": "Critical,High,Medium,Affected objects",
						"categoryAxis": [
							"Component"
						],
						"valueAxis": [
							"Critical",
							"High",
							"Medium",
							"Affected objects"
						],
						"tooltipVariant": "single"
					},
					"fieldMapping": {
						"timestamp": "Last finding",
						"leftAxisValues": [
							"Critical"
						]
					},
					"hiddenLegendFields": [
						"Critical",
						"High",
						"Affected objects",
						"Medium"
					],
					"truncationMode": "middle",
					"valueRepresentation": "absolute",
					"xAxisLabel": "Last finding",
					"xAxisIsLabelVisible": false,
					"leftYAxisSettings": {}
				},
				"singleValue": {
					"showLabel": true,
					"label": "timestamp",
					"prefixIcon": "",
					"recordField": "timestamp",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [
						[
							"Repository"
						]
					],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {
						"value": "Critical"
					},
					"legend": "auto",
					"displayedFields": [
						"Component"
					],
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "Critical",
							"rangeAxis": ""
						},
						{
							"valueAxis": "High",
							"rangeAxis": ""
						},
						{
							"valueAxis": "Medium",
							"rangeAxis": ""
						},
						{
							"valueAxis": "Affected objects",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": [
						"Component"
					]
				},
				"label": {
					"showLabel": false,
					"label": "Critical"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"dataMapping": {
					"dimension": "Component",
					"displayedFields": [
						"Component",
						"Critical",
						"High",
						"Affected objects",
						"Last finding"
					],
					"value": "Critical",
					"longitude": "Critical",
					"latitude": "High"
				},
				"tooltip": {}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"18": {
			"type": "data",
			"title": "Top 10 affected objects by finding criticality",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n// aggregation and custom filtering\n| fieldsAdd object.name=coalesce(object.name, object.id)\n| summarize {\n        Critical=countIf(dt.security.risk.level==\"CRITICAL\"),\n        High=countIf(dt.security.risk.level==\"HIGH\"),\n        Medium=countIf(dt.security.risk.level==\"MEDIUM\"),\n        `Vulnerable components`=countDistinctExact(component.name),\n        `Last finding`=takeMax(timestamp)\n}, by:{`Object ID`=object.id, `Object Name`=object.name}\n| sort {Critical, direction:\"descending\"}, {High, direction:\"descending\"},\n       {Medium, direction:\"descending\"}, {`Vulnerable components`, direction:\"descending\"}\n| limit 10",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "table",
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "Critical",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					},
					{
						"id": 2,
						"field": "High",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 0,
								"color": {
									"Default": "var(--dt-colors-charts-security-risk-level-high-default, #cd3741)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					},
					{
						"id": 3,
						"field": "Medium",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 1,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "Object ID,Object Name",
						"valueAxisLabel": "Critical,High,Medium,Vulnerable components",
						"categoryAxis": [
							"Object ID",
							"Object Name"
						],
						"valueAxis": [
							"Critical",
							"High",
							"Medium",
							"Vulnerable components"
						],
						"tooltipVariant": "single",
						"groupMode": "stacked"
					},
					"truncationMode": "middle",
					"colorPalette": "security-risk-level",
					"fieldMapping": {
						"timestamp": "Last finding",
						"leftAxisValues": [
							"Critical"
						]
					},
					"xAxisLabel": "Last finding",
					"xAxisIsLabelVisible": false,
					"valueRepresentation": "absolute",
					"hiddenLegendFields": [
						"Critical",
						"High",
						"Medium",
						"Vulnerable components"
					],
					"leftYAxisSettings": {}
				},
				"singleValue": {
					"showLabel": true,
					"label": "Vulnerability external id (CVE)",
					"prefixIcon": "",
					"recordField": "Vulnerability external id (CVE)",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [
						[
							"Object ID"
						]
					],
					"lineWrapIds": [],
					"columnWidths": {
						"[\"Object ID\"]": 336,
						"[\"Object Name\"]": 697
					},
					"sortBy": {
						"columnId": "[\"# of Critical\"]",
						"direction": "descending"
					},
					"linewrapEnabled": false,
					"monospacedFontEnabled": false,
					"monospacedFontColumns": [],
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {
						"value": "Critical"
					},
					"legend": "auto",
					"displayedFields": [
						"Object ID",
						"Object Name"
					],
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "Critical",
							"rangeAxis": ""
						},
						{
							"valueAxis": "High",
							"rangeAxis": ""
						},
						{
							"valueAxis": "Medium",
							"rangeAxis": ""
						},
						{
							"valueAxis": "Vulnerable components",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": [
						"Object ID",
						"Object Name"
					]
				},
				"label": {
					"showLabel": false,
					"label": "Critical"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"autoSelectVisualization": false,
				"dataMapping": {
					"dimension": "Object ID",
					"displayedFields": [
						"Object ID",
						"Object Name",
						"Critical",
						"High",
						"Medium",
						"Vulnerable components",
						"Last finding"
					],
					"value": "Critical",
					"longitude": "Critical",
					"latitude": "High"
				},
				"tooltip": {}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"19": {
			"type": "markdown",
			"title": "",
			"content": "## Vulnerabilities\nDistribution of unique vulnerabilities by risk."
		},
		"20": {
			"type": "data",
			"title": "Medium",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {object.id, vulnerability.id, component.name, component.version}, sort: {timestamp desc}\n// aggregation and custom filtering\n| filter dt.security.risk.level==\"MEDIUM\"\n| summarize {Vulnerabilities=countDistinctExact(vulnerability.id)}",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "singleValue",
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "Vulnerabilities",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-06-default, #a9780f)"
								},
								"comparator": "≥",
								"label": "",
								"value": 1
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "Vulnerabilities",
						"valueAxisLabel": "Vulnerabilities",
						"categoryAxis": [
							"Vulnerabilities"
						],
						"valueAxis": [
							"Vulnerabilities"
						],
						"tooltipVariant": "single"
					},
					"leftYAxisSettings": {
						"max": "auto"
					},
					"hiddenLegendFields": [],
					"seriesOverrides": [
						{
							"seriesId": [
								"findings"
							],
							"override": {
								"color": {
									"Default": "var(--dt-colors-charts-security-risk-level-high-default, #cd3741)"
								}
							}
						}
					],
					"legend": {
						"hidden": true
					},
					"truncationMode": "middle"
				},
				"singleValue": {
					"showLabel": false,
					"label": "Vulnerabilities",
					"prefixIcon": "",
					"recordField": "Vulnerabilities",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"isInverseTrend": true,
						"isRelative": false,
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {},
					"displayedFields": [],
					"legend": {
						"hidden": false,
						"position": "auto"
					},
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "Vulnerabilities",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": []
				},
				"label": {
					"showLabel": false,
					"label": "Vulnerabilities"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"unitsOverrides": [
					{
						"identifier": "highs",
						"unitCategory": "unspecified",
						"baseUnit": "none",
						"displayUnit": null,
						"decimals": 0,
						"suffix": "",
						"delimiter": false,
						"added": 1713193676655
					}
				],
				"dataMapping": {
					"dimension": "Vulnerabilities",
					"displayedFields": [
						"Vulnerabilities"
					],
					"value": "Vulnerabilities",
					"longitude": "Vulnerabilities"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"21": {
			"type": "data",
			"title": "Vulnerability findings over time by provider product",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n// get the latest vulnerability finding report for the affected entity and the component of the repository in the registry\n| makeTimeseries count(), time:{timestamp}, by:{event.provider}",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "areaChart",
			"visualizationSettings": {
				"thresholds": [],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "event.provider",
						"valueAxisLabel": "interval",
						"categoryAxis": [
							"event.provider"
						],
						"valueAxis": [
							"interval"
						],
						"tooltipVariant": "single"
					},
					"hiddenLegendFields": [
						"interval"
					],
					"leftYAxisSettings": {
						"scale": "linear"
					},
					"valueRepresentation": "absolute",
					"fieldMapping": {
						"timestamp": "timeframe",
						"leftAxisValues": [
							"count()"
						]
					},
					"truncationMode": "middle",
					"xAxisLabel": "timeframe",
					"xAxisIsLabelVisible": false
				},
				"singleValue": {
					"showLabel": true,
					"label": "timestamp",
					"prefixIcon": "",
					"recordField": "timestamp",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": true
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [
						[
							"Repository"
						]
					],
					"columnWidths": {},
					"columnTypeOverrides": [
						{
							"fields": [
								"count()"
							],
							"value": "sparkline",
							"id": 1734024958033
						}
					]
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {
						"value": "event.provider"
					},
					"legend": "auto",
					"displayedFields": [
						"event.provider"
					],
					"colorMode": "color-palette",
					"colorPalette": "categorical"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "interval",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": [
						"event.provider"
					]
				},
				"label": {
					"showLabel": false,
					"label": "interval"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"dataMapping": {
					"dimension": "interval",
					"displayedFields": [
						"interval",
						"event.provider"
					],
					"value": "interval",
					"longitude": "interval"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"24": {
			"type": "markdown",
			"title": "",
			"content": "##### Top vulnerable components by number of critical findings\n____\n"
		},
		"25": {
			"type": "markdown",
			"title": "",
			"content": "##### Top affected objects by number of critical findings\n____\n"
		},
		"26": {
			"type": "markdown",
			"title": "",
			"content": "### Latest 50 vulnerability findings\nRecently ingested vulnerability finding events."
		},
		"27": {
			"type": "data",
			"title": "Total ingested findings",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n// get the latest vulnerability finding report for the affected entity and the component of the repository in the registry\n| summarize count()",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "singleValue",
			"visualizationSettings": {
				"thresholds": [],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "gap",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"curve": "linear",
					"pointsDisplay": "auto",
					"categoricalBarChartSettings": {
						"layout": "horizontal",
						"categoryAxisTickLayout": "horizontal",
						"scale": "absolute",
						"groupMode": "stacked",
						"colorPaletteMode": "multi-color",
						"categoryAxis": [
							"count()"
						],
						"categoryAxisLabel": "count()",
						"valueAxis": [
							"count()"
						],
						"valueAxisLabel": "count()",
						"tooltipVariant": "single"
					},
					"colorPalette": "categorical",
					"valueRepresentation": "absolute",
					"truncationMode": "middle"
				},
				"singleValue": {
					"showLabel": false,
					"label": "count()",
					"prefixIcon": "",
					"recordField": "count()",
					"autoscale": true,
					"alignment": "center",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					},
					"colorThresholdTarget": "value"
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"linewrapEnabled": false,
					"lineWrapIds": [],
					"monospacedFontEnabled": false,
					"monospacedFontColumns": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "hexagon",
					"legend": {
						"hidden": false,
						"position": "auto"
					},
					"displayedFields": [],
					"dataMappings": {},
					"truncationMode": "middle",
					"colorMode": "color-palette",
					"colorPalette": "categorical"
				},
				"histogram": {
					"legend": "auto",
					"yAxis": {
						"label": "Frequency",
						"scale": "linear"
					},
					"colorPalette": "categorical",
					"dataMappings": [
						{
							"valueAxis": "count()",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"truncationMode": "middle",
					"displayedFields": []
				},
				"label": {
					"showLabel": false,
					"label": "count()"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"autoSelectVisualization": false,
				"dataMapping": {
					"dimension": "count()",
					"displayedFields": [
						"count()"
					],
					"value": "count()",
					"longitude": "count()"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 1,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"28": {
			"type": "data",
			"title": "Number of components by risk",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n// aggregation and custom filtering\n| summarize {\n  riskScore=takeMax(dt.security.risk.score),\n  riskLevels=collectArray(dt.security.risk.level)\n}, by:{component.name}\n| fieldsAdd riskLevel=if(in(\"CRITICAL\",riskLevels),\"CRITICAL\", else: \n                      if(in(\"HIGH\",riskLevels),\"HIGH\", else: \n                      if(in(\"MEDIUM\",riskLevels),\"MEDIUM\", else: \n                      if(in(\"LOW\",riskLevels),\"LOW\", else: \n                      if(in(\"NONE\",riskLevels),\"NONE\", else: \"NOT_AVAILABLE\")))))\n| summarize {\n    components = countDistinctExact(component.name),\n    riskScore=takeMax(riskScore)\n  }, by:{riskLevel}\n| sort riskScore desc\n| fieldsRemove riskScore",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "donutChart",
			"visualizationSettings": {
				"thresholds": [],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "number-of-slices",
						"groupingThresholdValue": 10,
						"valueType": "absolute",
						"showTotalValue": true
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "riskLevel",
						"valueAxisLabel": "components",
						"categoryAxis": [
							"riskLevel"
						],
						"valueAxis": [
							"components"
						],
						"tooltipVariant": "single",
						"isCategoryLabelVisible": false,
						"isValueLabelVisible": true
					},
					"colorPalette": "security-risk-level",
					"truncationMode": "middle"
				},
				"singleValue": {
					"showLabel": true,
					"label": "error",
					"prefixIcon": "",
					"recordField": "error",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "hexagon",
					"dataMappings": {
						"value": "components"
					},
					"legend": {
						"0": "a",
						"1": "u",
						"2": "t",
						"3": "o",
						"position": "right",
						"hidden": false
					},
					"displayedFields": [
						"riskLevel"
					],
					"colorMode": "color-palette",
					"colorPalette": "red",
					"min": null,
					"max": null,
					"customColors": [
						{
							"id": 0,
							"value": 0,
							"comparator": "≥",
							"color": {
								"Default": "var(--dt-colors-charts-categorical-color-01-default, #134fc9)"
							}
						}
					]
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "components",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": [
						"riskLevel"
					]
				},
				"label": {
					"showLabel": false,
					"label": "components"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"autoSelectVisualization": false,
				"dataMapping": {
					"dimension": "riskLevel",
					"displayedFields": [
						"riskLevel",
						"components"
					],
					"value": "components",
					"longitude": "components"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"29": {
			"type": "data",
			"title": "Components with top risk",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n// aggregation and custom filtering// aggregation and custom filtering\n| filter in(dt.security.risk.level,{\"CRITICAL\",\"HIGH\"})\n| summarize {components=countDistinctExact(component.name)}",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "singleValue",
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "components",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-status-critical-default, #c4233b)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "absolute",
						"groupingThresholdValue": 0,
						"valueType": "absolute"
					},
					"categoryOverrides": {
						"NOT_AVAILABLE": {
							"color": "var(--dt-colors-charts-logstatus-none-default, #2c2f3f)",
							"added": 1713354177614
						}
					},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "components",
						"valueAxisLabel": "components",
						"categoryAxis": [
							"components"
						],
						"valueAxis": [
							"components"
						],
						"tooltipVariant": "single"
					},
					"hiddenLegendFields": [],
					"colorPalette": "security-risk-level",
					"truncationMode": "middle"
				},
				"singleValue": {
					"showLabel": false,
					"label": "components",
					"prefixIcon": "",
					"recordField": "components",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {},
					"displayedFields": [],
					"legend": {
						"hidden": false,
						"position": "auto"
					},
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "components",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": []
				},
				"label": {
					"showLabel": false,
					"label": "components"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"dataMapping": {
					"dimension": "components",
					"displayedFields": [
						"components"
					],
					"value": "components",
					"longitude": "components"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"30": {
			"type": "markdown",
			"title": "",
			"content": "### Affected runtime entities\nRuntime entities affected by the findings (based on the matched object attributes, such as IP or container image digest)."
		},
		"31": {
			"type": "data",
			"title": "Top 10 vulnerable host entities by finding criticality",
			"query": "fetch dt.entity.host\n| fieldsAdd entity.name, entity.detected_name, ipAddress\n| expand ipAddress\n| join [\n   fetch events\n  | filter dt.system.bucket == \"default_security_custom_events\"\n  | filter event.kind == \"SECURITY_EVENT\"\n     and in(event.type,{\"VULNERABILITY_FINDING\"})\n  | filter object.type == \"HOST\"\n  // dashboard variables\n  | filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n  | dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n  | expand host.ip\n  | sort timestamp desc\n  | summarize {\n      timestamp=takeLast(timestamp),\n      dt.security.risk.level=takeLast(dt.security.risk.level)\n    }, by:{object.name=coalesce(object.name,object.id), host.ip, event.provider, vulnerability.id, component.name}\n], kind:leftOuter, on:{left[ipAddress]==right[host.ip]}\n| filter isNotNull(right.host.ip)\n| summarize {\n  `Last finding`=takeMax(right.timestamp),\n  `Host entity`=takeLast(entity.name),\n  IP=collectDistinct(ipAddress),\n  Critical=countIf(right.dt.security.risk.level==\"CRITICAL\"),\n  High=countIf(right.dt.security.risk.level==\"HIGH\"),\n  Medium=countIf(right.dt.security.risk.level==\"MEDIUM\"),\n  `Vulnerable components`=countDistinctExact(right.component.name)\n}, by:{dt.source_entity=id, `Object name`=right.object.name}\n| sort {Critical,direction:\"descending\"}, {High,direction:\"descending\"}, \n       {Medium,direction:\"descending\"}, {`Vulnerable components`,direction:\"descending\"}\n| limit 10",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "Critical",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 0,
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #ae132d)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					},
					{
						"id": 2,
						"field": "High",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					},
					{
						"id": 3,
						"field": "Medium",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 1,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "gap",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"curve": "linear",
					"pointsDisplay": "auto",
					"categoricalBarChartSettings": {
						"layout": "horizontal",
						"categoryAxisTickLayout": "horizontal",
						"scale": "absolute",
						"groupMode": "stacked",
						"colorPaletteMode": "multi-color",
						"categoryAxis": [
							"dt.source_entity",
							"Object name",
							"Host entity"
						],
						"categoryAxisLabel": "dt.source_entity,Object name,Host entity",
						"valueAxis": [
							"Critical",
							"High",
							"Medium",
							"Vulnerable components"
						],
						"valueAxisLabel": "Critical,High,Medium,Vulnerable components",
						"tooltipVariant": "single"
					},
					"colorPalette": "categorical",
					"valueRepresentation": "absolute",
					"truncationMode": "middle",
					"xAxisLabel": "Last finding",
					"xAxisIsLabelVisible": false,
					"hiddenLegendFields": [
						"Critical",
						"High",
						"Medium",
						"Vulnerable components"
					],
					"fieldMapping": {
						"timestamp": "Last finding",
						"leftAxisValues": [
							"Critical"
						]
					},
					"leftYAxisSettings": {}
				},
				"singleValue": {
					"showLabel": true,
					"label": "dt.source_entity",
					"prefixIcon": "",
					"recordField": "dt.source_entity",
					"autoscale": true,
					"alignment": "center",
					"trend": {
						"trendType": "auto",
						"isVisible": true
					},
					"colorThresholdTarget": "value"
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [
						[
							"dt.source_entity"
						],
						[
							"Last finding"
						]
					],
					"linewrapEnabled": false,
					"lineWrapIds": [],
					"monospacedFontEnabled": false,
					"monospacedFontColumns": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "hexagon",
					"legend": {
						"hidden": false,
						"position": "auto"
					},
					"displayedFields": [
						"dt.source_entity",
						"Object name",
						"Host entity"
					],
					"dataMappings": {
						"value": "Critical"
					},
					"truncationMode": "middle",
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"legend": "auto",
					"yAxis": {
						"label": "Frequency",
						"scale": "linear"
					},
					"colorPalette": "categorical",
					"dataMappings": [],
					"variant": "single",
					"truncationMode": "middle",
					"displayedFields": []
				},
				"label": {
					"showLabel": false,
					"label": "Critical"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"autoSelectVisualization": false,
				"dataMapping": {
					"displayedFields": [
						"dt.source_entity",
						"Object name",
						"Last finding",
						"Host entity",
						"Critical",
						"High",
						"Medium",
						"Vulnerable components"
					],
					"value": "Critical"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"visualization": "table",
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 1,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			},
			"description": ""
		},
		"32": {
			"type": "data",
			"title": "Top 10 vulnerable container entities by finding criticality",
			"query": "fetch dt.entity.container_group_instance\n| fieldsAdd entity.name, containerImageDigest, containerImageName, workloadName, workload.id=belongs_to[dt.entity.cloud_application]\n| join [\n   fetch events\n  | filter dt.system.bucket == \"default_security_custom_events\"\n  | filter event.kind == \"SECURITY_EVENT\"\n     and in(event.type,{\"VULNERABILITY_FINDING\"})\n  | filter object.type == \"CONTAINER_IMAGE\"\n  // dashboard variables\n  | filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n  | dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n  | summarize {\n      timestamp=takeMax(timestamp),\n      dt.security.risk.level=takeLast(dt.security.risk.level)\n    }, by:{object.name=coalesce(object.name,object.id), container_image.digest, event.provider, vulnerability.id, component.name}\n], kind:leftOuter, on:{left[containerImageDigest]==right[container_image.digest]}\n| filter isNotNull(right.container_image.digest)\n| summarize {\n  `Last finding`=takeMax(right.timestamp),\n  Workload=takeAny(workloadName),\n  Critical=countIf(right.dt.security.risk.level==\"CRITICAL\"),\n  High=countIf(right.dt.security.risk.level==\"HIGH\"),\n  Medium=countIf(right.dt.security.risk.level==\"MEDIUM\"),\n  `Vulnerable components`=countDistinctExact(right.component.name)\n}, by:{dt.source_entity=id, `Object name`=right.object.name, Container=entity.name}\n| sort {Critical,direction:\"descending\"}, {High,direction:\"descending\"}, \n       {Medium,direction:\"descending\"}, {`Vulnerable components`,direction:\"descending\"}\n| limit 10",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "Critical",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 0,
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #ae132d)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					},
					{
						"id": 2,
						"field": "High",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					},
					{
						"id": 3,
						"field": "Medium",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 1,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"
								},
								"comparator": ">",
								"label": "",
								"value": 0
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "gap",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"curve": "linear",
					"pointsDisplay": "auto",
					"categoricalBarChartSettings": {
						"layout": "horizontal",
						"categoryAxisTickLayout": "horizontal",
						"scale": "absolute",
						"groupMode": "stacked",
						"colorPaletteMode": "multi-color",
						"categoryAxis": [
							"dt.source_entity",
							"Object name",
							"Container",
							"Workload"
						],
						"categoryAxisLabel": "dt.source_entity,Object name,Container,Workload",
						"valueAxis": [
							"Critical",
							"High",
							"Medium",
							"Vulnerable components"
						],
						"valueAxisLabel": "Critical,High,Medium,Vulnerable components",
						"tooltipVariant": "single"
					},
					"colorPalette": "categorical",
					"valueRepresentation": "absolute",
					"truncationMode": "middle",
					"xAxisLabel": "Last finding",
					"xAxisIsLabelVisible": false,
					"hiddenLegendFields": [
						"Critical",
						"High",
						"Medium",
						"Vulnerable components"
					],
					"fieldMapping": {
						"timestamp": "Last finding",
						"leftAxisValues": [
							"Critical"
						]
					},
					"leftYAxisSettings": {}
				},
				"singleValue": {
					"showLabel": true,
					"label": "dt.source_entity",
					"prefixIcon": "",
					"recordField": "dt.source_entity",
					"autoscale": true,
					"alignment": "center",
					"trend": {
						"trendType": "auto",
						"isVisible": true
					},
					"colorThresholdTarget": "value"
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [
						[
							"dt.source_entity"
						],
						[
							"Last finding"
						]
					],
					"linewrapEnabled": false,
					"lineWrapIds": [],
					"monospacedFontEnabled": false,
					"monospacedFontColumns": [],
					"columnWidths": {
						"[\"Object name\"]": 297,
						"[\"Container\"]": 334.20001220703125
					},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "hexagon",
					"legend": {
						"hidden": false,
						"position": "auto"
					},
					"displayedFields": [
						"dt.source_entity",
						"Object name",
						"Container",
						"Workload"
					],
					"dataMappings": {
						"value": "Critical"
					},
					"truncationMode": "middle",
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"legend": "auto",
					"yAxis": {
						"label": "Frequency",
						"scale": "linear"
					},
					"colorPalette": "categorical",
					"dataMappings": [],
					"variant": "single",
					"truncationMode": "middle",
					"displayedFields": []
				},
				"label": {
					"showLabel": false,
					"label": "Critical"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"autoSelectVisualization": false,
				"dataMapping": {
					"displayedFields": [
						"dt.source_entity",
						"Object name",
						"Container",
						"Last finding",
						"Workload",
						"Critical",
						"High",
						"Medium",
						"Vulnerable components"
					],
					"value": "Critical"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"visualization": "table",
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 1,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"33": {
			"type": "data",
			"title": "Number of host entities by risk",
			"query": "fetch dt.entity.host\n| fieldsAdd entity.name, entity.detected_name, ipAddress\n| expand ipAddress\n| join [\n   fetch events\n  | filter dt.system.bucket == \"default_security_custom_events\"\n  | filter event.kind == \"SECURITY_EVENT\"\n     and in(event.type,{\"VULNERABILITY_FINDING\"})\n  | filter object.type == \"HOST\"\n  // dashboard variables\n  | filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n  | dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n  | expand host.ip\n  | sort timestamp desc\n  | summarize {\n      timestamp=takeLast(timestamp),\n      dt.security.risk.level=takeLast(dt.security.risk.level),\n      dt.security.risk.score=takeLast(dt.security.risk.score)\n    }, by:{object.name=coalesce(object.name,object.id), host.ip, event.provider, vulnerability.id, component.name}\n], kind:leftOuter, on:{left[ipAddress]==right[host.ip]}\n| filter isNotNull(right.host.ip)\n// aggregation and custom filtering\n| summarize {\n  riskScore=takeMax(right.dt.security.risk.score),\n  riskLevels=collectArray(right.dt.security.risk.level)\n}, by:{entity.id=id}\n| fieldsAdd riskLevel=if(in(\"CRITICAL\",riskLevels),\"CRITICAL\", else: \n                      if(in(\"HIGH\",riskLevels),\"HIGH\", else: \n                      if(in(\"MEDIUM\",riskLevels),\"MEDIUM\", else: \n                      if(in(\"LOW\",riskLevels),\"LOW\", else: \n                      if(in(\"NONE\",riskLevels),\"NONE\", else: \"NOT_AVAILABLE\")))))\n| summarize {\n    Entities = countDistinctExact(entity.id),\n    riskScore=takeMax(riskScore)\n  }, by:{riskLevel}\n| sort riskScore desc\n| fieldsRemove riskScore",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "donutChart",
			"visualizationSettings": {
				"thresholds": [],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "number-of-slices",
						"groupingThresholdValue": 10,
						"valueType": "absolute",
						"showTotalValue": true
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "riskLevel",
						"valueAxisLabel": "Entities",
						"categoryAxis": [
							"riskLevel"
						],
						"valueAxis": [
							"Entities"
						],
						"tooltipVariant": "single",
						"isCategoryLabelVisible": false,
						"isValueLabelVisible": true
					},
					"colorPalette": "security-risk-level",
					"truncationMode": "middle"
				},
				"singleValue": {
					"showLabel": true,
					"label": "error",
					"prefixIcon": "",
					"recordField": "error",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "hexagon",
					"dataMappings": {
						"value": "Entities"
					},
					"legend": {
						"0": "a",
						"1": "u",
						"2": "t",
						"3": "o",
						"position": "right",
						"hidden": false
					},
					"displayedFields": [
						"riskLevel"
					],
					"colorMode": "color-palette",
					"colorPalette": "red",
					"min": null,
					"max": null,
					"customColors": [
						{
							"id": 0,
							"value": 0,
							"comparator": "≥",
							"color": {
								"Default": "var(--dt-colors-charts-categorical-color-01-default, #134fc9)"
							}
						}
					]
				},
				"histogram": {
					"dataMappings": [],
					"variant": "single",
					"displayedFields": []
				},
				"label": {
					"showLabel": false,
					"label": "Entities"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"autoSelectVisualization": false,
				"dataMapping": {
					"displayedFields": [
						"riskLevel",
						"Entities"
					],
					"value": "Entities"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"34": {
			"type": "data",
			"title": "Number of container entities by risk",
			"query": "fetch dt.entity.container_group_instance\n| fieldsAdd entity.name, containerImageDigest, containerImageName, workloadName, workload.id=belongs_to[dt.entity.cloud_application]\n| join [\n   fetch events\n  | filter dt.system.bucket == \"default_security_custom_events\"\n  | filter event.kind == \"SECURITY_EVENT\"\n     and in(event.type,{\"VULNERABILITY_FINDING\"})\n  | filter object.type == \"CONTAINER_IMAGE\"\n  // dashboard variables\n  | filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n  | dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n  | summarize {\n      timestamp=takeMax(timestamp),\n      dt.security.risk.score=takeLast(dt.security.risk.score),\n      dt.security.risk.level=takeLast(dt.security.risk.level)\n    }, by:{object.name=coalesce(object.name,object.id), container_image.digest, event.provider, vulnerability.id, component.name}\n], kind:leftOuter, on:{left[containerImageDigest]==right[container_image.digest]}\n| filter isNotNull(right.container_image.digest)\n// aggregation and custom filtering\n| summarize {\n  riskScore=takeMax(right.dt.security.risk.score),\n  riskLevels=collectArray(right.dt.security.risk.level)\n}, by:{entity.id=id}\n| fieldsAdd riskLevel=if(in(\"CRITICAL\",riskLevels),\"CRITICAL\", else: \n                      if(in(\"HIGH\",riskLevels),\"HIGH\", else: \n                      if(in(\"MEDIUM\",riskLevels),\"MEDIUM\", else: \n                      if(in(\"LOW\",riskLevels),\"LOW\", else: \n                      if(in(\"NONE\",riskLevels),\"NONE\", else: \"NOT_AVAILABLE\")))))\n| summarize {\n    Entities = countDistinctExact(entity.id),\n    riskScore=takeMax(riskScore)\n  }, by:{riskLevel}\n| sort riskScore desc\n| fieldsRemove riskScore",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "donutChart",
			"visualizationSettings": {
				"thresholds": [],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "number-of-slices",
						"groupingThresholdValue": 10,
						"valueType": "absolute",
						"showTotalValue": true
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "riskLevel",
						"valueAxisLabel": "Entities",
						"categoryAxis": [
							"riskLevel"
						],
						"valueAxis": [
							"Entities"
						],
						"tooltipVariant": "single",
						"isCategoryLabelVisible": false,
						"isValueLabelVisible": true
					},
					"colorPalette": "security-risk-level",
					"truncationMode": "middle"
				},
				"singleValue": {
					"showLabel": true,
					"label": "error",
					"prefixIcon": "",
					"recordField": "error",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "hexagon",
					"dataMappings": {
						"value": "Entities"
					},
					"legend": {
						"0": "a",
						"1": "u",
						"2": "t",
						"3": "o",
						"position": "right",
						"hidden": false
					},
					"displayedFields": [
						"riskLevel"
					],
					"colorMode": "color-palette",
					"colorPalette": "red",
					"min": null,
					"max": null,
					"customColors": [
						{
							"id": 0,
							"value": 0,
							"comparator": "≥",
							"color": {
								"Default": "var(--dt-colors-charts-categorical-color-01-default, #134fc9)"
							}
						}
					]
				},
				"histogram": {
					"dataMappings": [],
					"variant": "single",
					"displayedFields": []
				},
				"label": {
					"showLabel": false,
					"label": "Entities"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"autoSelectVisualization": false,
				"dataMapping": {
					"displayedFields": [
						"riskLevel",
						"Entities"
					],
					"value": "Entities"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"35": {
			"type": "data",
			"title": "Number of affected objects by risk",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n// aggregation and custom filtering\n| summarize {\n  riskScore=takeMax(dt.security.risk.score),\n  riskLevels=collectArray(dt.security.risk.level)\n}, by:{object.id}\n| fieldsAdd riskLevel=if(in(\"CRITICAL\",riskLevels),\"CRITICAL\", else: \n                      if(in(\"HIGH\",riskLevels),\"HIGH\", else: \n                      if(in(\"MEDIUM\",riskLevels),\"MEDIUM\", else: \n                      if(in(\"LOW\",riskLevels),\"LOW\", else: \n                      if(in(\"NONE\",riskLevels),\"NONE\", else: \"NOT_AVAILABLE\")))))\n| summarize {\n    Objects = countDistinctExact(object.id),\n    riskScore=takeMax(riskScore)\n  }, by:{riskLevel}\n| sort riskScore desc\n| fieldsRemove riskScore",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "donutChart",
			"visualizationSettings": {
				"thresholds": [],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "number-of-slices",
						"groupingThresholdValue": 10,
						"valueType": "absolute",
						"showTotalValue": true
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "riskLevel",
						"valueAxisLabel": "Objects",
						"categoryAxis": [
							"riskLevel"
						],
						"valueAxis": [
							"Objects"
						],
						"tooltipVariant": "single",
						"isCategoryLabelVisible": false,
						"isValueLabelVisible": true
					},
					"colorPalette": "security-risk-level",
					"truncationMode": "middle"
				},
				"singleValue": {
					"showLabel": true,
					"label": "error",
					"prefixIcon": "",
					"recordField": "error",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "hexagon",
					"dataMappings": {
						"value": "Objects"
					},
					"legend": {
						"0": "a",
						"1": "u",
						"2": "t",
						"3": "o",
						"position": "right",
						"hidden": false
					},
					"displayedFields": [
						"riskLevel"
					],
					"colorMode": "color-palette",
					"colorPalette": "red",
					"min": null,
					"max": null,
					"customColors": [
						{
							"id": 0,
							"value": 0,
							"comparator": "≥",
							"color": {
								"Default": "var(--dt-colors-charts-categorical-color-01-default, #134fc9)"
							}
						}
					]
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "Objects",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": [
						"riskLevel"
					]
				},
				"label": {
					"showLabel": false,
					"label": "Objects"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"autoSelectVisualization": false,
				"dataMapping": {
					"dimension": "riskLevel",
					"displayedFields": [
						"riskLevel",
						"Objects"
					],
					"value": "Objects",
					"longitude": "Objects"
				},
				"tooltip": {
					"showCustomFields": false
				}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"36": {
			"type": "data",
			"title": "High & critical findings by product",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n// aggregation and custom filtering\n| summarize {\n    Critical=countIf(dt.security.risk.level==\"CRITICAL\"),\n    High=countIf(dt.security.risk.level==\"HIGH\")\n  }, by:{Product=event.provider}\n| sort Critical desc",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "categoricalBarChart",
			"visualizationSettings": {
				"thresholds": [],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "number-of-slices",
						"groupingThresholdValue": 10,
						"valueType": "absolute"
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "Product",
						"valueAxisLabel": "Critical,High",
						"categoryAxis": [
							"Product"
						],
						"valueAxis": [
							"Critical",
							"High"
						],
						"tooltipVariant": "single",
						"isCategoryLabelVisible": true,
						"isValueLabelVisible": true,
						"groupMode": "stacked",
						"colorPaletteMode": "single-color",
						"scale": "absolute"
					},
					"colorPalette": "security-risk-level",
					"truncationMode": "middle",
					"xAxisLabel": "timestamp",
					"xAxisIsLabelVisible": false,
					"valueRepresentation": "absolute",
					"hiddenLegendFields": [
						"event",
						"host",
						"object",
						"product"
					],
					"leftYAxisSettings": {}
				},
				"singleValue": {
					"showLabel": true,
					"label": "error",
					"prefixIcon": "",
					"recordField": "error",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [],
					"lineWrapIds": [],
					"columnWidths": {},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "hexagon",
					"dataMappings": {
						"value": "Critical"
					},
					"legend": {
						"hidden": false,
						"position": "bottom"
					},
					"displayedFields": [
						"Product"
					],
					"colorMode": "color-palette",
					"colorPalette": "red",
					"min": null,
					"max": null,
					"truncationMode": "end"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "Critical",
							"rangeAxis": ""
						},
						{
							"valueAxis": "High",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": [
						"Product"
					]
				},
				"label": {
					"showLabel": false,
					"label": "Critical"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"autoSelectVisualization": false,
				"dataMapping": {
					"dimension": "Product",
					"displayedFields": [
						"Product",
						"Critical",
						"High"
					],
					"value": "Critical",
					"longitude": "Critical",
					"latitude": "High"
				},
				"tooltip": {}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"37": {
			"type": "data",
			"title": "Top 10 high & critical findings by affected objects",
			"query": "fetch events\n| filter dt.system.bucket == \"default_security_custom_events\"\n| filter event.kind == \"SECURITY_EVENT\"\n     and event.type==\"VULNERABILITY_FINDING\"\n// filter for events fitting the SD requirements\n| filterOut isNull(finding.id) OR isNull(object.id) OR isNull(vulnerability.id)\n// dashboard variables\n| filter (in(event.provider, $Product))\n     AND (in(dt.security.risk.level, $RiskLevel))\n     AND (in(vulnerability.id, $Vulnerability))\n     AND (in(component.name, $Component))\n     AND (in(object.type, $AffectedObjectType))\n| dedup {finding.id, object.id, vulnerability.id, component.name, component.version}, sort:{timestamp}\n| filter in(dt.security.risk.level,{\"CRITICAL\",\"HIGH\"})\n| summarize by:{\n          Product=event.provider, \n          Finding=coalesce(finding.title, finding.id) \n        }, {`Affected objects`=countDistinctExact(object.id)}\n| sort `Affected objects` desc\n| limit 10",
			"davis": {
				"enabled": false,
				"davisVisualization": {
					"isAvailable": true
				}
			},
			"visualization": "table",
			"visualizationSettings": {
				"thresholds": [
					{
						"id": 1,
						"field": "Risk score",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
								},
								"comparator": "=",
								"label": "",
								"value": 9
							},
							{
								"id": 3,
								"color": {
									"Default": "var(--dt-colors-charts-security-risk-level-high-default, #cd3741)"
								},
								"comparator": ">",
								"label": "",
								"value": 7
							}
						]
					},
					{
						"id": 2,
						"field": "Risk level",
						"title": "",
						"isEnabled": true,
						"rules": [
							{
								"id": 2,
								"color": {
									"Default": "var(--dt-colors-charts-loglevel-emergency-default, #9033a3)"
								},
								"comparator": "=",
								"label": "",
								"value": "CRITICAL"
							},
							{
								"id": 3,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-12-default, #cd3741)"
								},
								"comparator": "=",
								"label": "",
								"value": "HIGH"
							},
							{
								"id": 4,
								"color": {
									"Default": "var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"
								},
								"comparator": "=",
								"label": "",
								"value": "MEDIUM"
							}
						]
					}
				],
				"chartSettings": {
					"xAxisScaling": "analyzedTimeframe",
					"gapPolicy": "connect",
					"circleChartSettings": {
						"groupingThresholdType": "relative",
						"groupingThresholdValue": 0,
						"valueType": "relative"
					},
					"categoryOverrides": {},
					"categoricalBarChartSettings": {
						"categoryAxisLabel": "Product,Finding",
						"valueAxisLabel": "Affected objects",
						"categoryAxis": [
							"Product",
							"Finding"
						],
						"valueAxis": [
							"Affected objects"
						],
						"tooltipVariant": "single"
					},
					"hiddenLegendFields": [
						"Objects"
					],
					"truncationMode": "middle",
					"valueRepresentation": "absolute",
					"xAxisLabel": "Last detected",
					"xAxisIsLabelVisible": false,
					"leftYAxisSettings": {},
					"legend": {
						"hidden": true
					}
				},
				"singleValue": {
					"showLabel": true,
					"label": "Vulnerability external id (CVE)",
					"prefixIcon": "",
					"recordField": "Vulnerability external id (CVE)",
					"autoscale": true,
					"alignment": "center",
					"colorThresholdTarget": "value",
					"trend": {
						"trendType": "auto",
						"isVisible": false
					}
				},
				"table": {
					"rowDensity": "condensed",
					"enableSparklines": false,
					"hiddenColumns": [
						[
							"riskScore"
						]
					],
					"lineWrapIds": [],
					"columnWidths": {
						"[\"Vulnerability\"]": 523,
						"[\"Affected objects\"]": 166.875,
						"[\"Finding\"]": 450.25
					},
					"columnTypeOverrides": []
				},
				"honeycomb": {
					"shape": "square",
					"dataMappings": {
						"value": "Affected objects"
					},
					"legend": "auto",
					"displayedFields": [
						"Product",
						"Finding"
					],
					"colorMode": "color-palette",
					"colorPalette": "blue"
				},
				"histogram": {
					"dataMappings": [
						{
							"valueAxis": "Affected objects",
							"rangeAxis": ""
						}
					],
					"variant": "single",
					"displayedFields": [
						"Product",
						"Finding"
					]
				},
				"label": {
					"showLabel": false,
					"label": "Affected objects"
				},
				"icon": {
					"showIcon": false,
					"icon": ""
				},
				"valueBoundaries": {
					"min": "auto",
					"max": "auto"
				},
				"dataMapping": {
					"dimension": "Product",
					"displayedFields": [
						"Product",
						"Finding",
						"Affected objects"
					],
					"value": "Affected objects",
					"longitude": "Affected objects"
				},
				"tooltip": {}
			},
			"querySettings": {
				"maxResultRecords": 1000,
				"defaultScanLimitGbytes": 500,
				"maxResultMegaBytes": 100,
				"defaultSamplingRatio": 10,
				"enableSampling": false
			}
		},
		"38": {
			"type": "markdown",
			"title": "",
			"content": "##### Summary of critical and high-risk findings\n____\n"
		}
	},
	"layouts": {
		"0": {
			"x": 0,
			"y": 60,
			"w": 24,
			"h": 12
		},
		"1": {
			"x": 0,
			"y": 0,
			"w": 24,
			"h": 2
		},
		"2": {
			"x": 9,
			"y": 8,
			"w": 15,
			"h": 8
		},
		"5": {
			"x": 0,
			"y": 8,
			"w": 3,
			"h": 4
		},
		"6": {
			"x": 0,
			"y": 12,
			"w": 3,
			"h": 2
		},
		"7": {
			"x": 9,
			"y": 19,
			"w": 6,
			"h": 7
		},
		"10": {
			"x": 3,
			"y": 8,
			"w": 6,
			"h": 8
		},
		"13": {
			"x": 0,
			"y": 19,
			"w": 3,
			"h": 4
		},
		"16": {
			"x": 0,
			"y": 16,
			"w": 24,
			"h": 2
		},
		"17": {
			"x": 7,
			"y": 35,
			"w": 17,
			"h": 7
		},
		"18": {
			"x": 7,
			"y": 27,
			"w": 17,
			"h": 7
		},
		"19": {
			"x": 0,
			"y": 6,
			"w": 24,
			"h": 2
		},
		"20": {
			"x": 0,
			"y": 14,
			"w": 3,
			"h": 2
		},
		"21": {
			"x": 3,
			"y": 2,
			"w": 21,
			"h": 4
		},
		"24": {
			"x": 0,
			"y": 34,
			"w": 24,
			"h": 1
		},
		"25": {
			"x": 0,
			"y": 26,
			"w": 24,
			"h": 1
		},
		"26": {
			"x": 0,
			"y": 58,
			"w": 24,
			"h": 2
		},
		"27": {
			"x": 0,
			"y": 2,
			"w": 3,
			"h": 4
		},
		"28": {
			"x": 0,
			"y": 35,
			"w": 7,
			"h": 7
		},
		"29": {
			"x": 0,
			"y": 23,
			"w": 3,
			"h": 3
		},
		"30": {
			"x": 0,
			"y": 42,
			"w": 24,
			"h": 2
		},
		"31": {
			"x": 7,
			"y": 44,
			"w": 17,
			"h": 7
		},
		"32": {
			"x": 7,
			"y": 51,
			"w": 17,
			"h": 7
		},
		"33": {
			"x": 0,
			"y": 44,
			"w": 7,
			"h": 7
		},
		"34": {
			"x": 0,
			"y": 51,
			"w": 7,
			"h": 7
		},
		"35": {
			"x": 0,
			"y": 27,
			"w": 7,
			"h": 7
		},
		"36": {
			"x": 3,
			"y": 19,
			"w": 6,
			"h": 7
		},
		"37": {
			"x": 15,
			"y": 19,
			"w": 9,
			"h": 7
		},
		"38": {
			"x": 0,
			"y": 18,
			"w": 24,
			"h": 1
		}
	},
	"importedWithCode": false,
	"settings": {
		"defaultTimeframe": {
			"value": {
				"from": "now()-7d",
				"to": "now()"
			},
			"enabled": true
		}
	}
}