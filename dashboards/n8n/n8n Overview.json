{
    "version": 20,
    "variables": [
        {
            "version": 2,
            "key": "n8n_root_url",
            "type": "text",
            "visible": false,
            "editable": true,
            "defaultValue": "http://localhost:5678"
        }
    ],
    "tiles": {
        "0": {
            "type": "markdown",
            "content": "![n8n logo](https://upload.wikimedia.org/wikipedia/commons/5/53/N8n-logo-new.svg)"
        },
        "1": {
            "title": "",
            "type": "data",
            "query": "fetch logs\n| search(\"n8n.audit\")\n| parse content, \"JSON:json_content\"\n| fieldsAdd payloadContent = json_content[payload]\n| fields timestamp, json_content[id], json_content[eventName], payloadContent",
            "visualization": "table",
            "visualizationSettings": {
                "autoSelectVisualization": true,
                "thresholds": [],
                "table": {
                    "columnWidths": {
                        "[\"json_content[eventName]\"]": 348
                    }
                }
            },
            "querySettings": {
                "maxResultRecords": 1000,
                "defaultScanLimitGbytes": 500,
                "maxResultMegaBytes": 1,
                "defaultSamplingRatio": 10,
                "enableSampling": false
            },
            "davis": {
                "enabled": false,
                "davisVisualization": {
                    "isAvailable": true
                }
            }
        },
        "6": {
            "type": "markdown",
            "content": "--- \n "
        },
        "7": {
            "type": "markdown",
            "content": "--- \n "
        },
        "9": {
            "title": "Successful Workflow Runs",
            "type": "data",
            "query": "fetch logs\n| search(\"n8n.workflow.success\")\n| parse content, \"JSON:json_content\"\n| fields timestamp, json_content[`payload`][`executionId`], json_content[`payload`][`workflowId`], json_content[`payload`][`isManual`], json_content[`payload`][`workflowName`]\n| fieldsAdd `execution link` = concat(\"[link](\", concat($n8n_root_url, \"/workflow/\",`json_content[payload][workflowId]`, \"/executions/\", `json_content[payload][executionId]`), \")\")\n| summarize count(), by: {`json_content[payload][workflowName]`}",
            "visualization": "categoricalBarChart",
            "visualizationSettings": {
                "chartSettings": {
                    "truncationMode": "middle",
                    "categoryOverrides": {},
                    "categoricalBarChartSettings": {
                        "categoryAxisLabel": "json_content[payload][workflowName]",
                        "categoryAxis": [
                            "json_content[payload][workflowName]"
                        ],
                        "valueAxis": [
                            "count()"
                        ],
                        "valueAxisLabel": "count()"
                    }
                },
                "autoSelectVisualization": false,
                "thresholds": []
            },
            "querySettings": {
                "maxResultRecords": 1000,
                "defaultScanLimitGbytes": 500,
                "maxResultMegaBytes": 1,
                "defaultSamplingRatio": 10,
                "enableSampling": false
            },
            "davis": {
                "enabled": false,
                "davisVisualization": {
                    "isAvailable": true
                }
            }
        },
        "11": {
            "type": "markdown",
            "content": "# Audit Logs\n\nSeeing no records? That's OK. It means no audit level events have occurred in the selected timeframe."
        },
        "13": {
            "title": "Workflows Started",
            "type": "data",
            "query": "fetch logs\n| search(\"n8n.workflow.started\")\n| summarize count()",
            "visualization": "singleValue",
            "visualizationSettings": {
                "singleValue": {
                    "labelMode": "none",
                    "label": "count()",
                    "recordField": "count()",
                    "trend": {
                        "isVisible": true
                    }
                },
                "autoSelectVisualization": false,
                "thresholds": []
            },
            "querySettings": {
                "maxResultRecords": 1000,
                "defaultScanLimitGbytes": 500,
                "maxResultMegaBytes": 1,
                "defaultSamplingRatio": 10,
                "enableSampling": false
            },
            "davis": {
                "enabled": false,
                "davisVisualization": {
                    "isAvailable": true
                }
            }
        },
        "14": {
            "title": "Failed Workflow Runs",
            "type": "data",
            "query": "fetch logs\n| search(\"n8n.workflow.failed\")\n| parse content, \"JSON:json_content\"\n| fields timestamp, json_content[`payload`][`executionId`], json_content[`payload`][`workflowId`], json_content[`payload`][`isManual`], json_content[`payload`][`workflowName`]\n| fieldsAdd `execution link` = concat(\"[link](\", concat($n8n_root_url, \"/workflow/\",`json_content[payload][workflowId]`, \"/executions/\", `json_content[payload][executionId]`), \")\")\n| summarize count(), by: {`json_content[payload][workflowName]`}",
            "visualization": "categoricalBarChart",
            "visualizationSettings": {
                "chartSettings": {
                    "truncationMode": "middle",
                    "categoryOverrides": {},
                    "categoricalBarChartSettings": {
                        "isCategoryLabelVisible": false,
                        "categoryAxis": [
                            "count()",
                            "json_content[payload][workflowName]"
                        ],
                        "valueAxis": [
                            "count()"
                        ],
                        "valueAxisLabel": "count()"
                    }
                },
                "autoSelectVisualization": false,
                "thresholds": []
            },
            "querySettings": {
                "maxResultRecords": 1000,
                "defaultScanLimitGbytes": 500,
                "maxResultMegaBytes": 1,
                "defaultSamplingRatio": 10,
                "enableSampling": false
            },
            "davis": {
                "enabled": false,
                "davisVisualization": {
                    "isAvailable": true
                }
            }
        },
        "16": {
            "title": "Successful Workflow Runs",
            "type": "data",
            "query": "fetch logs\n| search(\"n8n.workflow.success\")\n| summarize count()",
            "visualization": "singleValue",
            "visualizationSettings": {
                "singleValue": {
                    "labelMode": "none",
                    "label": "json_content[payload][workflowId]",
                    "recordField": "count()",
                    "sparklineSettings": {
                        "record": "count()"
                    },
                    "trend": {
                        "isVisible": true
                    }
                },
                "autoSelectVisualization": false,
                "thresholds": []
            },
            "querySettings": {
                "maxResultRecords": 1000,
                "defaultScanLimitGbytes": 500,
                "maxResultMegaBytes": 1,
                "defaultSamplingRatio": 10,
                "enableSampling": false
            },
            "davis": {
                "enabled": false,
                "davisVisualization": {
                    "isAvailable": true
                }
            }
        },
        "17": {
            "title": "Failed Workflow Runs",
            "type": "data",
            "query": "fetch logs\n| search(\"n8n.workflow.failed\")\n| summarize count()",
            "visualization": "singleValue",
            "visualizationSettings": {
                "singleValue": {
                    "labelMode": "none",
                    "label": "json_content[payload][workflowId]",
                    "recordField": "count()",
                    "sparklineSettings": {
                        "record": "count()"
                    },
                    "trend": {
                        "isVisible": true
                    }
                },
                "autoSelectVisualization": false,
                "thresholds": []
            },
            "querySettings": {
                "maxResultRecords": 1000,
                "defaultScanLimitGbytes": 500,
                "maxResultMegaBytes": 1,
                "defaultSamplingRatio": 10,
                "enableSampling": false
            },
            "davis": {
                "enabled": false,
                "davisVisualization": {
                    "isAvailable": true
                }
            }
        },
        "18": {
            "title": "Active Workflows",
            "type": "data",
            "subType": "dql-builder-metrics",
            "query": "timeseries max(n8n_active_workflow_count)\n| fieldsAdd value.A = arrayLast(`max(n8n_active_workflow_count)`)",
            "visualization": "singleValue",
            "visualizationSettings": {
                "singleValue": {
                    "labelMode": "none",
                    "label": "value.A",
                    "recordField": "value.A",
                    "sparklineSettings": {
                        "record": "avg(n8n_active_workflow_count)"
                    },
                    "trend": {
                        "isVisible": false
                    }
                },
                "autoSelectVisualization": false,
                "thresholds": []
            },
            "querySettings": {
                "maxResultRecords": 1000,
                "defaultScanLimitGbytes": 500,
                "maxResultMegaBytes": 1,
                "defaultSamplingRatio": 10,
                "enableSampling": false
            },
            "queryConfig": {
                "version": "17.0.1",
                "subQueries": [
                    {
                        "id": "A",
                        "isEnabled": true,
                        "datatype": "metrics",
                        "metric": {
                            "key": "n8n_active_workflow_count",
                            "aggregation": "max"
                        },
                        "convertToValue": "Last"
                    }
                ]
            },
            "davis": {
                "enabled": false,
                "davisVisualization": {
                    "isAvailable": true
                }
            }
        },
        "21": {
            "title": "Workflow Execution Log",
            "description": "",
            "type": "data",
            "query": "fetch logs, scanLimitGBytes: 500\n| search(\"n8n.workflow\")\n| parse content, \"JSON:json_content\"\n/* We must use the timestamp in the content\n*  NOT the `timestamp` field because remember, the Dynatrace collector gathers and sends logs in at an interval\n*  thus, according to DT a started + finished `timestamp` could be the same (its the time both log lines hit Dynatrace)\n* and NOT the time they actually occurred.\n* This time they actually occurred is content[ts]\n*/\n| fieldsAdd payload = json_content[payload]\n| fieldsAdd realTS = json_content[ts]\n| fieldsAdd errorMessage = payload[errorMessage]\n| fields realTS, executionID = payload[`executionId`], eventName = json_content[`eventName`], workflowID = payload[`workflowId`], isManual = payload[`isManual`], workflowName = payload[`workflowName`], errorMessage\n// Combining the data by the executionID\n// First sort by execution ID and timestamp to ensure all .started are first\n| sort executionID, realTS\n| summarize t = collectArray(record(realTS = toTimestamp(realTS), eventName, workflowID, workflowName, errorMessage)), by:{executionID}\n// Re-add the fields as standalone fields\n// Note the isNull check for error message:\n// Most workflows (hopefully are successful and thus won't have an error message\n// ie. errorMessage will be null - in which case, just to an empty string\n// If there is an errorMessage, use it\n| fieldsAdd workflowID = t[0][workflowID]\n| fieldsAdd workflowName = t[0][workflowName]\n// Generate human readable status\n// Split the status and if it isn't null (will occur when the workflow is running)\n// take the last part\n| fieldsAdd workflowStatus = if(isNotNull(splitString(t[1][eventName], \".\")[2]), if(splitString(t[1][eventName], \".\")[2] == \"success\", \"✅ Success\", else: \"❌ Error\"), else: \"🔜 Running...\")\n| sort t[][eventName]\n// Convoluted logic that checks both fields for an error message\n// When there is no error (ie. a successful run) the field is null, hence the nested if/else\n| fieldsAdd errorMessage = if (t[1][eventName] == \"n8n.workflow.failed\", t[1][errorMessage], else: (if(isNull(t[0][errorMessage]), \"\", else: t[0][errorMessage])))\n// if(isNull(t[0][errorMessage]), \"\", else: t[1][errorMessage])\n// Calculate execution time\n// If the workflow is currently running it may not have a value\n// In which case, set the value to \"-\"\n// Note: The eventNames are sorted alphabetically so during a success:\n// n8n.workflow.started (ie. the start time) comes before n8n.workflow.success (ie. the finish time)\n// BUT during a failure:\n// n8n.workflow.failed (ie. the finish time) comes before n8n.workflow.started (ie. the start time)\n// which could lead to correct (but negative) timings for failed workflows (eg. -185ms where it should be 185ms)\n// Hence the nested ifs in the line below account for this possibility\n| fieldsAdd `execution time` = if(t[0][eventName] == \"n8n.workflow.started\", (if(isNull(t[1][realTS] - t[0][realTS]), \"-\", else: t[1][realTS] - t[0][realTS])), else: (if(isNull(t[0][realTS] - t[1][realTS]), \"-\", else: t[0][realTS] - t[1][realTS])))\n| fieldsAdd `workflow run` = concat(\"[\", workflowName, \"](\", concat($n8n_root_url, \"/workflow/\", workflowID, \"/executions/\", executionID), \")\")\n// Clean up fields\n| fieldsRemove t, workflowID, workflowName\n| sort toLong(executionID) desc",
            "visualization": "table",
            "visualizationSettings": {
                "table": {
                    "columnWidths": {
                        "[\"t\"]": 1111,
                        "[\"errorMessage\"]": 121
                    },
                    "columnTypeOverrides": [
                        {
                            "id": 3572446.700000001,
                            "fields": [
                                "executionID"
                            ],
                            "value": "number"
                        },
                        {
                            "id": 8884779.7,
                            "fields": [
                                "workflow run"
                            ],
                            "value": "markdown"
                        },
                        {
                            "id": 386057.69999999925,
                            "fields": [
                                "workflowStatus"
                            ],
                            "value": "text"
                        }
                    ],
                    "columnOrder": [
                        "[\"executionID\"]",
                        "[\"workflowStatus\"]",
                        "[\"errorMessage\"]",
                        "[\"execution time\"]",
                        "[\"workflow run\"]"
                    ]
                },
                "autoSelectVisualization": true,
                "thresholds": []
            },
            "querySettings": {
                "maxResultRecords": 1000,
                "defaultScanLimitGbytes": 500,
                "maxResultMegaBytes": 1,
                "defaultSamplingRatio": 10,
                "enableSampling": false
            },
            "davis": {
                "enabled": false,
                "davisVisualization": {
                    "isAvailable": true
                }
            }
        }
    },
    "layouts": {
        "0": {
            "x": 0,
            "y": 0,
            "w": 3,
            "h": 2
        },
        "1": {
            "x": 0,
            "y": 8,
            "w": 20,
            "h": 5
        },
        "6": {
            "x": 0,
            "y": 13,
            "w": 22,
            "h": 1
        },
        "7": {
            "x": 0,
            "y": 5,
            "w": 22,
            "h": 1
        },
        "9": {
            "x": 8,
            "y": 0,
            "w": 8,
            "h": 2
        },
        "11": {
            "x": 0,
            "y": 6,
            "w": 23,
            "h": 2
        },
        "13": {
            "x": 3,
            "y": 0,
            "w": 2,
            "h": 2
        },
        "14": {
            "x": 5,
            "y": 2,
            "w": 11,
            "h": 2
        },
        "16": {
            "x": 5,
            "y": 0,
            "w": 3,
            "h": 2
        },
        "17": {
            "x": 3,
            "y": 2,
            "w": 2,
            "h": 2
        },
        "18": {
            "x": 0,
            "y": 2,
            "w": 3,
            "h": 3
        },
        "21": {
            "x": 16,
            "y": 0,
            "w": 8,
            "h": 4
        }
    },
    "importedWithCode": false,
    "settings": {}
}
